For a **simple implementation**, you can use `ref` to track the login state in `App.vue` and pass it to `Nav.vue` via `props`.  

---

### **1. Update `App.vue`**
This will manage the authentication state and handle logout redirection.

```vue
<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import Nav from './components/Nav.vue';

const isAuthenticated = ref(false);
const router = useRouter();

const login = () => {
  isAuthenticated.value = true;
};

const logout = () => {
  isAuthenticated.value = false;
  router.push('/'); // Redirect to login page
};
</script>

<template>
  <Nav :isAuthenticated="isAuthenticated" :logout="logout" />
  <router-view @login="login" />
</template>
```

---

### **2. Modify `Nav.vue`**
Update navigation links dynamically.

```vue
<script setup>
import { defineProps } from 'vue';
import { RouterLink } from 'vue-router';

const props = defineProps(['isAuthenticated', 'logout']);
</script>

<template>
  <nav class="bg-[#008289] flex justify-between text-[#ffffff] px-4 py-4 md:px-6 md:py-6">
    <RouterLink to="/buckets" class="italic text-xl">Eventful Moments</RouterLink>
    <ul class="flex gap-4 text-lg">
      <template v-if="props.isAuthenticated">
        <li><RouterLink to="/buckets">My Buckets</RouterLink></li>
        <li><button @click="props.logout">Logout</button></li>
      </template>
      <template v-else>
        <li><RouterLink to="/">Login</RouterLink></li>
        <li><RouterLink to="/register">Register</RouterLink></li>
      </template>
    </ul>
  </nav>
</template>
```

---

### **3. Update `Login.vue`**
Emit an event on successful login.

```vue
<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { defineEmits } from 'vue';

const email = ref('');
const password = ref('');
const errorMessage = ref('');
const emits = defineEmits(['login']);
const router = useRouter();

const handleLogin = () => {
  if (email.value && password.value) {
    emits('login'); // Notify App.vue about login
    router.push('/buckets');
  } else {
    errorMessage.value = 'Please enter valid credentials';
  }
};
</script>
```

---

### **How It Works**
âœ… **Login:** Changes navigation to show `My Buckets` & `Logout`.  
âœ… **Logout:** Redirects user back to the login page and updates the nav.  

This is the simplest way to dynamically update the navbar using Vue Router without advanced state management. ðŸš€ Let me know if you need tweaks!